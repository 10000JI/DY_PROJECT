# port 변경
server.port=80
# DB	
# username
spring.datasource.hikari.username=admin
# password
spring.datasource.hikari.password=maria1234

# url
#spring.datasource.url=jdbc:mariadb://gdj60mj.cerolrldoylw.ap-northeast-2.rds.amazonaws.com:3306/db
# driver
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

#로그 찍기 위해 DB연결 정보 수정 
spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.url=jdbc:log4jdbc:mariadb://databasemjs.cbauw3ebgewo.ap-northeast-2.rds.amazonaws.com:3306/db

log4jdbc.spylogdelegator.name=net.sf.log4jdbc.log.slf4j.Slf4jSpyLogDelegator
log4jdbc.dump.sql.maxlinelength=0

# Web 요청이 발생할 경우 설정
logging.level.org.springframework.web=debug

# post 방식으로 요청 했을 경우 파라미터의 종류가 많아질 경우 생략 될수도 있다
#logging.level.org.springframework.web=TRACE
#spring.mvc.log-request-details=false

logging.level.jdbc=OFF
logging.level.jdbc.sqlonly=OFF           
logging.level.jdbc.sqltiming=DEBUG       
logging.level.jdbc.audit=OFF             
logging.level.jdbc.resultset=OFF         
logging.level.jdbc.resultsettable=DEBUG
logging.level.jdbc.connection=OFF        
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.com.zaxxer.hikari=OFF
logging.level.javax.sql.DataSource=INFO

## Mapper, Config 설정
mybatis.mapper-locations=classpath:database/mappers/*Mapper.xml
mybatis.config-location=classpath:database/config/MybatisConfig.xml



# Encoding 설정
server.servlet.encoding.charset=UTF-8

#spring.config.import=classpath:application-dev.properties

# JSP 연결
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

#log level
logging.level.root=info
#logging.pattern.console=%msg%n

#FileUpload
## Multipart 사용 여부
spring.servlet.multipart.enabled=true
## 파일 하나당 최대 크기 설정
spring.servlet.multipart.max-file-size=3MB
## 총 파일 최대 크기 설정
spring.servlet.multipart.max-request-size=20MB

#파일 저장 경로
app.upload=C:/production/upload/
app.upload.notice=C:/production/upload/notice
app.upload.qna=C:/production/upload/qna

## 요청시 파일 경로
app.upload.base=file:///C:/production/upload/

app.url.path=/file/**

## transaction 처리
spring.aop.proxy-target-class=true

## message 설정
spring.messages.basename=messages/message
spring.messages.encoding=UTF-8
spring.messages.use-code-as-default-message=true
spring.messages.cache-duration=600

# Mail Setting
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=kimmin7932@gmail.com
spring.mail.password=zcobonksycfssphi
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


### Social Login for Kakao
# Rest Api key
spring.security.oauth2.client.registration.kakao.client-id=d30aa24e8c542dde4b212d7d80a5cfed
# Secret Key(Admin Key)
spring.security.oauth2.client.registration.kakao.client-secret=dc0296a47d708b1aa2d471d71dde7d57
# Redirect URL
#spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/{action}/oauth2/code/{registrationId}
#  또는
spring.security.oauth2.client.registration.kakao.redirect-uri = http://localhost/login/oauth2/code/kakao
# 고정값
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
# 회원가입시 추가로 가져 오는 유저 정보 항목
spring.security.oauth2.client.registration.kakao.scope=profile_nickname,account_email
# Social Login 업체 명
spring.security.oauth2.client.registration.kakao.client-name=Kakao
# 인증 요청시 메서드 형식
spring.security.oauth2.client.registration.kakao.client-authentication-method=POST


## Provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri= https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id


